server:
  http:
    addr: 0.0.0.0:{{ .Values.service.http }}
    timeout: 10s
    corsAllowOrigins:
    {{- range .Values.config.server.http.corsAllowOrigins }}
    - {{ . | quote}}
    {{- end }}
  grpc:
    addr: 0.0.0.0:{{ .Values.service.grpc }}
    timeout: 10s
data:
  database:
    maxOpenConns: {{ .Values.config.database.maxOpenConns }}
    maxIdleConns: {{ .Values.config.database.maxIdleConns }}
    connMaxLifetime: {{ .Values.config.database.connMaxLifetime }}
    driver: {{ .Values.config.database.driver }}
    database: {{ .Values.config.database.dbname }}
    dsn: {{ include "universer.database.dsn" .Values.config.database }}
    replicaDSN: {{ include "universer.database.replicaDSN" .Values.config.database }}
  rabbitmq:
    addr: amqp://{{ .Values.config.rabbitmq.username }}:{{ .Values.config.rabbitmq.password }}@{{ tpl .Values.config.rabbitmq.host . }}:{{ .Values.config.rabbitmq.port }}/
  clickhouse:
    dsn: clickhouse://clickhouse:clickhouse@clickhouse:9000/univer?dial_timeout=10s&read_timeout=20s
  temporal:
    addr: {{ tpl .Values.config.temporal.addr . }}
    namespace: {{ .Values.config.temporal.namespace }}
  {{- with .Values.config.redis }}
  redis:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  s3:
    accessKeyID: {{ .Values.config.s3.accessKeyID }}
    accessKeySecret: {{ .Values.config.s3.accessKeySecret }}
    region: {{ .Values.config.s3.region }}
    endpoint: {{ .Values.config.s3.endpoint }}
    endpointPublic: {{ .Values.config.s3.endpointPublic }}
    usePathStyle: {{ .Values.config.s3.usePathStyle }}
    presignExpires: {{ .Values.config.s3.presignExpires }}
    defaultBucket: {{ .Values.config.s3.defaultBucket }}
service:
  apply:
    addr: "{{ tpl .Values.config.apply.host . }}:{{ .Values.config.apply.port }}"
    timeout: 10s
apiLimit:
  {{- with .Values.config.apiLimit }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
admin: 
{{- if .Values.config.admin -}}
  {{- range .Values.config.admin }}
  - user: {{ .user }}
    password: {{ .password }}
  {{- end }}
{{- else }} []
{{- end }}
extra:
  celldataMaxSize: 10485760 # 单位字节，10M
auth:
  enabled: {{ .Values.config.auth.enabled }}
  univerEnabled: {{ .Values.config.auth.univerEnabled }}
  cookieDomain: {{ .Values.config.auth.cookieDomain }}
  {{- with .Values.config.auth.casdoorSDK }}
  casdoorSDK:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.config.auth.oidc }}
  oidc:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.config.auth.oauth2 }}
  oauth2:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.config.auth.anonymous }}
  anonymous:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.config.auth.permission }}
  permission:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  admin:
    userIDs:
    {{- range .Values.config.auth.admin.userIDs }}
    - {{ . | quote }}
    {{- end }}
usip:
  enabled: {{ .Values.config.usip.enabled }}
  {{- with .Values.config.usip.uri }}
  uri:
    {{- toYaml . | nindent 4 }}
  {{- end }}
sentryConfig:
  {{- with .Values.config.sentryConfig.dsn }}
  dsn: {{ . }}
  {{- else }}
  dsn: ""
  {{- end }}
  debug: false
  enableTracing: true
  TracesSampleRate: 1.0
dataProtectionConf:
  enableProtection: {{ .Values.config.dataProtectionConf.enableProtection }}
  dataKeyRotate: {{ .Values.config.dataProtectionConf.dataKeyRotate }}
  dataKeyCacheExpiration: {{ .Values.config.dataProtectionConf.dataKeyCacheExpiration }}
  {{- if eq .Values.config.dataProtectionConf.kmsServiceName "aws" }}
  awskms:
    accessKeyID: {{ .Values.config.dataProtectionConf.awskms.accessKeyID }}
    accessKeySecret: {{ .Values.config.dataProtectionConf.awskms.accessKeySecret }}
    region: {{ .Values.config.dataProtectionConf.awskms.region }}
    kmsKeyID: {{ .Values.config.dataProtectionConf.awskms.kmsKeyID }}
  {{- else if eq .Values.config.dataProtectionConf.kmsServiceName "local" }}
  localKMS:
    cmkAlias: {{ .Values.config.dataProtectionConf.localKMS.cmkAlias }}
    cmkBase64: {{ .Values.config.dataProtectionConf.localKMS.cmkBase64 }}
  {{- end }}
sesConfig:
  accessKey: {{ .Values.config.sesConfig.accessKey }}
  accessSecret: {{ .Values.config.sesConfig.accessSecret }}
  region: {{ .Values.config.sesConfig.region }}
  templateName: {{ .Values.config.sesConfig.templateName }}
  redirectURL: {{ .Values.config.sesConfig.redirectURL }}
  loginErrorURL: {{ .Values.config.sesConfig.loginErrorURL }}
postHogConf:
  enabled: {{ .Values.config.postHogConf.enabled}}
  endpoint: {{ default "" .Values.config.postHogConf.endpoint}}
  projectKey: {{ default "" .Values.config.postHogConf.projectKey}}
entitlementConf:
  enable: {{ .Values.config.entitlementConf.enable }}
  defaultEntiConf:
    anonymousDefaultEntiId: {{ .Values.config.entitlementConf.defaultEntiConf.anonymousDefaultEntiId }}
    registeredDefaultEntiId: {{ .Values.config.entitlementConf.defaultEntiConf.registeredDefaultEntiId }}
  cronConf:
    reportRetryCron: {{ .Values.config.entitlementConf.cronConf.reportRetryCron | quote }}
    minRetryInterval: {{ .Values.config.entitlementConf.cronConf.minRetryInterval }}
    retryRate: {{ .Values.config.entitlementConf.cronConf.retryRate }}
    pendingSubCleanCron: {{ .Values.config.entitlementConf.cronConf.pendingSubCleanCron | quote }}
    detectInterval: {{ .Values.config.entitlementConf.cronConf.detectInterval }}
    cleanRate: {{ .Values.config.entitlementConf.cronConf.cleanRate }}
  stripeConf:
    apiPK: {{ .Values.config.entitlementConf.stripeConf.apiPK | quote }}
    apiSK: {{ .Values.config.entitlementConf.stripeConf.apiSK | quote }}
    whSK: {{ .Values.config.entitlementConf.stripeConf.whSK | quote }}
    timeout: {{ .Values.config.entitlementConf.stripeConf.timeout }}
workspace:
{{- with .Values.config.workspace }}
  {{- toYaml . | nindent 2 }}
{{- end }}