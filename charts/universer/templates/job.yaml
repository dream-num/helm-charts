{{ $driver := .Values.config.database.driver }}
{{ $imageRoot := .Values.job.image }}
{{- if ne $driver "postgresql" -}}
{{ $imageRoot = (dict "registry" $imageRoot.registry "repository" $imageRoot.repository "pullPolicy" $imageRoot.pullPolicy "tag" (printf "%s-%s" $imageRoot.tag $driver)) }}
{{- end -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "universer.fullname" . }}-job
  labels:
    {{- include "universer.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "common.images.image" (dict "imageRoot" $imageRoot "global" .Values.global) }}
          imagePullPolicy: {{ .Values.job.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: HOST
              value: {{ .Values.config.database.host }}
            - name: PORT
              value: {{ .Values.config.database.port | quote }}
            - name: DATABASE
              value: {{ .Values.config.database.dbname }}
            - name: USERNAME
              value: {{ .Values.config.database.username }}
            - name: PASSWORD
              value: {{ .Values.config.database.password }}
      restartPolicy: Never
  backoffLimit: 1

