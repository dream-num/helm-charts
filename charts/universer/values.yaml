# Default values for universer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global: 
  istioDefaultRevision: default

replicaCount: 1

image:
  registry: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com
  repository: release/universer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.10.2 # VERSION

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  http: 8000
  grpc: 9000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 50m
    memory: 50Mi

nodeSelector: {}

tolerations: []

affinity: {}

config:
  logs:
    disableLogMask: false
  server:
    http: 
      corsAllowOrigins: []
    shutdownTimeout: 300s
  database:
    maxOpenConns: 100
    maxIdleConns: 10
    # minutes
    connMaxLifetime: 60
    driver: postgresql
    host: postgresql
    port: 5432
    dbname: univer
    username: postgres
    password: postgres
    replicaHost: ""
  rabbitmq:
    enabled: true
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    eventSync: false
    cluster:
      enabled: false
      addr: ""
      username: ""
      password: ""
      vhost: "/"
      schema: amqp
  redis:
    # if use redis cluster, use comma to separate multiple redis servers
    # for example: redis1:6379,redis2:6379
    poolSize: 100
    addr: redis:6379
    read_timeout: 1s
    write_timeout: 1s
    db: 0
    username: ""
    password: ""
    sentinel:
      enabled: false
      masterName: ""
      sentinelAddr: ""
      username: ""
      password: ""
  apply:
    host: collaboration-server
    port: 5002
  ssc:
    host: univer-ssc
    port: 5005
  nodeRuntime:
    addr: http://localhost:14400
  pythonRuntime:
    addr: localhost:50052
  yuumi:
    addr: yuumi:5000
  fileExchange:
    enabled: false
    addr: worker-exchange:9004
  univerOps:
    host: univer-ops
    port: 9500
  admin: []
  s3:
    accessKeyID: ""
    accessKeySecret: ""
    region: oss-cn-shenzhen
    endpoint: https://oss-cn-shenzhen.aliyuncs.com
    endpointPublic: ""
    usePathStyle: false
    presignExpires: 3600s
    defaultBucket: univer
    publicBucket: ""
  temporal:
    addr: univer-temporal:7233
    namespace: default
  auth:
    enabled: false
    univerEnabled: false
    cookieDomain: "abc.example.com"
    loginErrorURL: ""
    mobileBindURL: ""
    homepageURL: ""
    loginURL: ""
    ssoAuthOrigin: ""
    casdoorSDK:
      organizationName: ""
      applicationName: ""
      domain: ""
    oidc:
      enabled: false
      issuer: https://accounts.google.com
      clientID: "xxxx"
      clientSecret: "xxxxxxxxxx"
      redirectURL: "http://example.com/oidc/callback"
      cookieDomain: "abc.example.com" # deprecated
    oauth2:
      enabled: false
      clientID: "xxxx"
      clientSecret: "xxxxxxxxxx"
      redirectURL: "http://example.com/oauth2/callback"
      cookieDomain: "abc.example.com" # deprecated
      authURL: "http://localhost:8081/oauth/authorize"
      tokenURL: "http://localhost:8081/oauth/token"
      apiURL: "http://localhost:8081/oauth/userinfo"
      scopes: "all"
      openidPath: "id"
      emailPath: "email"
      namePath: "name"
      avatarPath: "avatar"
    anonymous:
      enabled: false
    permission:
      enabled: false
      defaultShareScope: ""
      defaultShareRole: ""
      enableObjInherit: false
      customerStrategies: ""
    admin:
      userIDs: []
      liteServer: false

  apiLimit:
    method: {}
    ip: {}
    perMethod: {}
    user: {}
    perMethodUser: {}
  sentryConfig:
    dsn: ""
  usip:
    enabled: false
    uri:
      userinfo: "http://usip:8080/userinfo"
      collaborators: "http://usip:8080/collaborators"
      role: "http://usip:8080/role"
      credential: "http://usip:8080/credential"
  dataProtectionConf:
    enableProtection: false
    kmsServiceName: "none"
    dataKeyRotate: 5s
    dataKeyCacheExpiration: 30s
    localKMS:
      cmkAlias: alias/name
      cmkBase64: "key base64"
    awskms:
      accessKeyID: ""
      accessKeySecret: ""
      region: ""
      kmsKeyID: "cmkid or alias"
  sesConfig:
    accessKey: ""
    accessSecret: ""
    region: ""
    templateName: ""
    redirectURL: "http://example.com/oidc/email-callback"
    template:
      login: ""
      clipsheetWorkflow: ""
      emailAuthCode: ""
      inviteCode: ""
    senderAddr: ""
  smsConf:
    accessKey: ""
    accessSecret: ""
    endpoint: ""
    signName: ""
    templateCodeForLogin: ""
  postHogConf:
    enabled: false
    endpoint: ""
    projectKey: ""
  entitlementConf:
    enable: false
    defaultEntiConf:
      anonymousDefaultEntiId: 1
      registeredDefaultEntiId: 1
    cronConf:
      reportRetryCron: "@every 10s"
      minRetryInterval: 10
      retryRate: 5
      pendingSubCleanCron: "@every 60s"
      detectInterval: 300
      cleanRate: 2
    stripeConf:
      apiPK: ""
      apiSK: ""
      whSK: ""
      timeout: 10
    wechatPayConf:
      appID: ""
      mchCertificateSerialNumber: ""
      mchID: ""
      apiKey: ""
      notifyUrl: ""
    aliPayConf:
      appID: ""
      privateKey: ""
      apiKey: ""
      notifyUrl: ""
      isProd: false # default false
    orderExpireInterval: 86400000 # 24 hours
    intentExpireInterval: 900000 # 15 minutes
  workspace:
    enabled: false
  statsConf:
    timeInterval: 10
    maxRecords: 10000
    addr: ""
  jaegerConf:
    enabled: false
    grpcEndpoint: "jaeger:4317"
  models: []
  invitationCode:
    enabled: false
  wechat:
    appID: ""
    appSecret: ""
  permissionBasedExport:
    enabled: false
  notifyConf:
    purchase:
      - channel: 1
        templateId: ""
        locale: ""
  ip2AddrCliConf:
    pathFmt: ""
    token: ""


innerConfig: {}

wechatPay:
  apiclient_key: ""

aliPay:
  app_public_cert: ""
  root_cert: ""
  public_cert: ""

license:
  LICENSE: ""
  publicKey: ""
  licenseV2: ""
  licenseKeyV2: ""

casdoorLicense:
  publicKey: ""

job:
  enabled: true
  image:
    registry: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com
    repository: release/universer-sql
    pullPolicy: IfNotPresent
    tag: "0.0.16"

istio:
  enabled: false
  
  gateway:
    enabled: false
    hosts:
    - univer.private
    gateways:
    - univer
  
  featureGateway:
    enabled: false
    hosts:
    - univer.feature
    gateways:
    - univer-feature

  forbbidenApi: []