# Default values for universer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global: 
  istioDefaultRevision: default

replicaCount: 1

image:
  registry: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com
  repository: release/universer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "5cca5d3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  http: 8000
  grpc: 9000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

config:
  postgresql:
    maxOpenConns: 100
    maxIdleConns: 100
    # minutes
    connMaxLifetime: 60
    host: postgresql
    port: 5432
    database: univer
    username: postgres
    password: postgres
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  redis:
    addr: redis:6379
  transform:
    host: collaboration-server
    port: 5001
  apply:
    host: collaboration-server
    port: 5002
  node_snapshot:
    host: collaboration-server
    port: 5001
  admin: []
  s3:
    accessKeyID: ""
    accessKeySecret: ""
    region: oss-cn-shenzhen
    endpoint: https://oss-cn-shenzhen.aliyuncs.com
    endpointPublic: https://oss-cn-shenzhen.aliyuncs.com
    usePathStyle: false
    presignExpires: 3600s
  temporal:
    addr: univer-temporal:7233
    namespace: default
  auth:
    enabled: false
    oidc:
      issuer: https://accounts.google.com
      clientID: "xxxx"
      clientSecret: "xxxxxxxxxx"
      redirectURL: "http://example.com/auth/callback"
      cookieDomain: "abc.example.com"

license:
  LICENSE: ""
  publicKey: ""

job:
  image:
    registry: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com
    repository: release/universer-sql
    pullPolicy: IfNotPresent
    tag: "0.0.2"

istio:
  enabled: false
  
  gateway:
    enabled: false
    host: univer.private

    # select istio ingress gateway. for example
    # ingressSelector:
    #   istio: ingressgateway
    ingressSelector: {}

    tls:
      enabled: false
      credentialName: ""