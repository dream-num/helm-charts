name: ⚙️ K8s staging dispatch swagger

on:
  repository_dispatch:
    types: [dispatch-swagger]

jobs:
  deploy:
    name: K8sDeploy
    runs-on: arc-runner-set
    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-kubectl@v4
        with:
          version: v1.29.2

      - name: Setup kubeconfig
        run: |
          echo -e "${{ secrets.KUBECONFIG }}" >> /tmp/kubeconfig

      - uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: DownloadSwaggerJson
        run: |
          filename=$(basename ${{ github.event.client_payload.branch }}).yaml
          if [ $filename == "main.yaml" ]; then
            filename="openapi.yaml"
          fi
          mkdir -p charts/swagger-ui/config && \
          cd charts/swagger-ui/config && \
          kubectl --kubeconfig /tmp/kubeconfig get cm -n swagger swagger-ui -o go-template --template='{{range $key,$value := .data}}{{println $key}}{{end}}' | xargs touch  && \
          for file in *; do kubectl --kubeconfig /tmp/kubeconfig get cm -n swagger swagger-ui -o go-template --template="{{index .data \"$file\"}}" > $file; done && \
          curl -o $filename https://${{ secrets.GH_TOKEN }}@raw.githubusercontent.com/dream-num/univer-protocol/${{ github.event.client_payload.branch }}/openapi.yaml \
          cd -
      
      - name: Set swagger urls param
        run: |
          urls=""
          cd charts/swagger-ui/config && \
          for file in *; do name=${file%%.*}; urls="$urls{\"name\":\"$name\",\"url\":\"$file\"},"; done && \
          cd -
          urls=$(cur -c -1 $urls)
          echo "URLS=$(echo ${urls})" >> $GITHUB_ENV

      - name: HelmInstallSwagger
        run: |
          helm --kubeconfig /tmp/kubeconfig upgrade --install -n swagger --create-namespace \
            --set-json 'affinity={"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"weight":1,"preference":{"matchExpressions":[{"key":"univer.ai/instance-type","operator":"In","values":["biz-intensive"]}]}}]}}' \
            --set istio.enabled=true \
            --set-json 'istio.gateway={"enabled":true,"host":"${{ secrets.SWAGGER_HOST }}","ingressSelector":{"istio":"ingress"}}' \
            --set-json 'istio.auth={"user":"${{ secrets.SWAGGER_USER }}","password":"${{ secrets.SWAGGER_PASSWORD }}"}' \
            --set config.urls="${{ env.URLS }}" \
            swagger-ui charts/swagger-ui