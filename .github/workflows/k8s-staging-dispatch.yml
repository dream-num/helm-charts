name: ⚙️ K8s staging dispatch

on:
  repository_dispatch:
    types: [dispatch]

jobs:
  deploy:
    name: K8sDeploy
    runs-on: [self-hosted, Linux, office]
    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-helm@v3
        with:
          version: v3.12.0
      
      - name: HelmUpgradeInstall
        run: |
          echo -e "${{ secrets.KUBECONFIG }}" >> ./kubeconfig

          if [ "${{ github.event.client_payload.service }}" == "universer" ]; then
            
            helm --kubeconfig ./kubeconfig upgrade --install -n ${{ vars.K8S_NAMESPACE }} --create-namespace \
              --set config.postgresql.password="${{ secrets.POSTGRES_PASSWORD }}" \
              --set config.rabbitmq.password="${{ secrets.RABBITMQ_PASSWORD }}" \
              --set-json 'config.admin=[{"user":"admin","password":"${{ secrets.UNIVERSER_ADMIN_PASSWORD }}"}]' \
              --set-json 'license={"LICENSE":"${{ secrets.LICENSE }}","publicKey":"${{ secrets.PUBLIC_KEY }}"}' \
              --set-json 'image={"registry":"${{ vars.REGISTRY }}","repository":"univer/universer","tag":"${{ github.event.client_payload.tag }}"}' \
              --set job.image.registry="${{ vars.REGISTRY }}" \
              --set-json 'imagePullSecrets=[{"name":"regcred"}]' \
              --set istio.enabled=true \
              --set-json 'istio.gateway={"enabled":true,"host":"${{ secrets.K8S_UNIVER_HOST }}","ingressSelector":{"istio":"ingress"},"tls":{"enabled":true,"credentialName":"staging-host-credential"}}' \
              universer charts/universer

          elif [ "${{ github.event.client_payload.service }}" == "collaboration-server" ]; then 

            helm --kubeconfig ./kubeconfig upgrade --install -n ${{ vars.K8S_NAMESPACE }} --create-namespace \
              --set-json 'image={"registry":"${{ vars.REGISTRY }}","repository":"univer/univer-collaboration","tag":"${{ github.event.client_payload.tag }}"}' \
              --set-json 'imagePullSecrets=[{"name":"regcred"}]' \
              --set istio.enabled=true \
              collaboration-server charts/collaboration-server

          elif [ "${{ github.event.client_payload.service }}" == "collaboration-demo" ]; then 

            helm --kubeconfig ./kubeconfig upgrade --install -n ${{ vars.K8S_NAMESPACE }} --create-namespace \
              --set-json 'image={"registry":"${{ vars.REGISTRY }}","repository":"univer/univer-collaboration-demo","tag":"${{ github.event.client_payload.tag }}"}' \
              --set-json 'imagePullSecrets=[{"name":"regcred"}]' \
              --set istio.enabled=true \
              --set-json 'istio.gateway={"enabled":true,"host":"${{ secrets.K8S_UNIVER_HOST }}","ingressSelector":{"istio":"ingress"},"tls":{"enabled":true,"credentialName":"staging-host-credential"}}' \
              collaboration-demo charts/collaboration-demo

          elif [ "${{ github.event.client_payload.service }}" == "docs" ]; then 

            helm --kubeconfig ./kubeconfig upgrade --install -n prod --create-namespace \
              --set-json 'image={"registry":"${{ vars.REGISTRY }}","repository":"univer/univer-docs","tag":"${{ github.event.client_payload.tag }}"}' \
              --set-json 'imagePullSecrets=[{"name":"regcred"}]' \
              --set istio.enabled=true \
              --set-json 'istio.gateway={"enabled":true,"host":"www.univer.work","ingressSelector":{"istio":"ingress"},"tls":{"enabled":true,"credentialName":"docs-host-credential"}}' \
              docs charts/docs

          fi

      - name: ENDocsDeploy
        if: ${{ github.event.client_payload.service == 'docs' }}
        uses: appleboy/ssh-action@v1.0.0
        env:
          REGISTRY_USERNAME: "${{ secrets.REGISTRY_USERNAME }}"
          REGISTRY_PASSWORD: "${{ secrets.REGISTRY_PASSWORD }}"
        with:
          host: ${{ vars.EN_HOST }}
          username: ${{ vars.EN_HOST_USERNAME }}
          password: ${{ secrets.EN_HOST_PASSWORD }}
          script_stop: true
          envs: REGISTRY_USERNAME,REGISTRY_PASSWORD
          script: |
            env;

            echo $REGISTRY_PASSWORD | docker login univer-acr-registry.cn-shenzhen.cr.aliyuncs.com -u $REGISTRY_USERNAME --password-stdin

            docker pull univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/univer/univer-docs:${{ github.event.client_payload.tag }}

            docker stop univer-docs

            docker rm univer-docs
            
            docker run -d --name univer-docs -p 3020:3020 univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/univer/univer-docs:${{ github.event.client_payload.tag }}

