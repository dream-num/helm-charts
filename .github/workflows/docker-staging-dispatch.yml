name: 🐳 Univer.ai staging

on:
  workflow_dispatch:
    

jobs:
  deploy:
    name: DockerComposeDeploy
    runs-on: arc-runner-set
    steps:
    - uses: appleboy/ssh-action@v1.0.0
      env:
        REGISTRY_USERNAME: "${{ secrets.REGISTRY_USERNAME }}"
        REGISTRY_PASSWORD: "${{ secrets.REGISTRY_PASSWORD }}"
        DATABASE_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
        RABBITMQ_PASSWORD: "${{ secrets.RABBITMQ_PASSWORD }}"
        S3_USER: "${{ secrets.S3_ACCESS_KEY_ID }}"
        S3_PASSWORD: "${{ secrets.S3_ACCESS_KEY_SECRET }}"
        S3_REGION: "oss-cn-shenzhen"
        S3_PATH_STYLE: "false"
        S3_ENDPOINT: "https://oss-us-west-1-internal.aliyuncs.com"
        S3_ENDPOINT_PUBLIC: "https://oss-us-west-1.aliyuncs.com"
        S3_DEFAULT_BUCKET: "univer-ai-staging"
        SERVICE: "universer collaboration-server collaboration-demo univer-postgres univer-rabbitmq univer-temporal univer-redis univer-worker-exchange init-db univer-casdoor"
        LICENSE: "${{ secrets.LICENSE }}"
        PUBLIC_KEY: "${{ secrets.PUBLIC_KEY }}"
        AUTH_COOKIE_DOMAIN: ${{ secrets.AUTH_COOKIE_DOMAIN }}
        AUTH_OIDC_ENABLED: ${{ secrets.AUTH_OIDC_ENABLED }}
        AUTH_OIDC_CLIENT_ID: ${{ secrets.AUTH_OIDC_CLIENT_ID }}
        AUTH_OIDC_CLIENT_SECRET: ${{ secrets.AUTH_OIDC_CLIENT_SECRET }}
        AUTH_OIDC_ISSUER: ${{ secrets.AUTH_OIDC_ISSUER }}
        AUTH_OIDC_CALLBACK_URL: ${{ secrets.AUTH_OIDC_CALLBACK_URL }}
      with:
        host: ${{ vars.EN_HOST }}
        username: ${{ vars.EN_HOST_USERNAME }}
        password: ${{ secrets.EN_HOST_PASSWORD }}
        script_stop: true
        envs: REGISTRY_USERNAME,REGISTRY_PASSWORD,DATABASE_PASSWORD,RABBITMQ_PASSWORD,S3_USER,S3_PASSWORD,S3_REGION,S3_PATH_STYLE,S3_ENDPOINT,S3_ENDPOINT_PUBLIC,S3_DEFAULT_BUCKET,SERVICE,LICENSE,PUBLIC_KEY.AUTH_COOKIE_DOMAIN,AUTH_OIDC_ENABLED,AUTH_OIDC_CLIENT_ID,AUTH_OIDC_CLIENT_SECRET,AUTH_OIDC_ISSUER,AUTH_OIDC_CALLBACK_URL
        script: |
          local_dir=~/helm-charts;

          env;

          repo_url="https://github.com/dream-num/helm-charts.git";

          if [ ! -d "$local_dir" ]; then \
            git clone "$repo_url" $local_dir; \
          else \
            cd $local_dir; \
            git pull; \
          fi;

          echo -e "$LICENSE" > $local_dir/docker-compose/configs/LICENSE;
          echo -e "$PUBLIC_KEY" > $local_dir/docker-compose/configs/public_key.crt;

          ls $local_dir/docker-compose;

          cd $local_dir/docker-compose;

          bash run.dev.sh;

          exit;