services:
  univer-loki:
    restart: always
    container_name: univer-loki
    image: grafana/loki:${LOKI_VERSION}
    expose:
      - 3100
    environment:
      - NO_PROXY=127.0.0.1,localhost,${DOCKER_NETWORK_SUBNET}
    command: -config.file=/etc/loki/config.yaml
    networks:
      - univer
    volumes:
      - ./loki/loki:/etc/loki:ro
      - loki-data:/loki
    labels:
      - com.univer.app=loki

  univer-promtail:
    restart: always
    container_name: univer-promtail
    image: grafana/promtail:${PROMTAIL_VERSION}
    volumes:
      - ./loki/promtail:/etc/promtail:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NO_PROXY=127.0.0.1,localhost,${DOCKER_NETWORK_SUBNET},univer-loki
    command: -config.file=/etc/promtail/config.yml
    networks:
      - univer
    labels:
      - com.univer.app=promtail

  univer-grafana:
    restart: always
    container_name: univer-grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - NO_PROXY=127.0.0.1,localhost,${DOCKER_NETWORK_SUBNET},univer-loki,univer-prometheus
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://univer-loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false    
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://univer-prometheus:9090
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:${GRAFANA_VERSION}
    ports:
      - ${HOST_GRAFANA_PORT}:3000
    volumes:
      - ./loki/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - grafana-data:/var/lib/grafana
    networks:
      - univer
    labels:
      - com.univer.app=grafana

  univer-prometheus:
    restart: always
    container_name: univer-prometheus
    image: bitnami/prometheus:${PROMETHEUS_VERSION}
    user: root
    expose:
      - 9090
    environment:
      - NO_PROXY=127.0.0.1,localhost,${DOCKER_NETWORK_SUBNET}
    networks:
      - univer
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:rw
    labels:
      - com.univer.app=prometheus

  redis-exporter:
    image: oliver006/redis_exporter:${REDIS_EXPORTER_VERSION}
    expose:
      - 9121
    networks:
      - univer
    command:
      - "-redis.addr=redis://univer-redis:6379"
    profiles:
      - redis

  postgres-exporter:
    image: bitnami/postgres-exporter:${POSTGRES_EXPORTER_VERSION}
    expose:
      - 9187
    networks:
      - univer
    environment:
      DATA_SOURCE_NAME: "postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/postgres?sslmode=disable"
    profiles:
      - rds

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:${RABBITMQ_EXPORTER_VERSION}
    expose:
      - 9419
    networks: 
      - univer
    environment:
      RABBIT_URL: http://${RABBITMQ_HOST}:${RABBITMQ_HTTPPORT}
      RABBIT_USER: ${RABBITMQ_USERNAME}
      RABBIT_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBIT_CAPABILITIES: compat
    profiles:
      - mq

networks:
  univer:
    external: true
    name: univer-prod

volumes:
  loki-data:
    name: univer-prod-loki-data
  prometheus-data:
    name: univer-prod-prometheus-data
  grafana-data:
    name: univer-prod-grafana-data