version: '3'
services:
  universer:
    restart: always
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/universer:${UNIVERSER_VERSION}
    expose:
      - 8000
      - 9000
    environment:
      - NO_PROXY=127.0.0.1,localhost,172.30.0.0/16,univer-temporal,collaboration-server,univer-minio
    volumes:
      - ./configs:/data/configs
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/univers:/tmp/univers
    depends_on:
      univer-postgres:
        condition: service_started
      univer-rabbitmq:
        condition: service_started
      univer-temporal:
        condition: service_started
      univer-redis:
        condition: service_started
      init-db:
        condition: service_completed_successfully
    networks:
      - univer
    labels:
      - com.univer.app=universer
    deploy:
      replicas: 2
      endpoint_mode: dnsrr

  init-db:
    container_name: init-db
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/universer-sql:${UNIVERSER_SQL_VERSION}
    environment:
      - HOST=${POSTGRES_HOST}
      - PORT=${POSTGRES_PORT}
      - USERNAME=${POSTGRES_USERNAME}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - DATABASE=${POSTGRES_DATABASE}
      - NO_PROXY=127.0.0.1,localhost,172.30.0.0/16,${POSTGRES_HOST}
    networks:
      - univer
    depends_on:
      univer-postgres:
          condition: service_started
    labels:
      - com.univer.app=init-db

  lb:
    image: nginx:alpine-slim
    ports:
     - 8000:8000
    networks:
      - univer
    depends_on:
      - universer
    volumes:
      - ./nginx:/etc/nginx/conf.d/

  collaboration-server:
    restart: always
    container_name: collaboration-server
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/univer-collaboration:${COLLABORATION_SERVER_VERSION}
    environment:
      - URL_OF_TRANSFORM_SERVICE=0.0.0.0:5001
      - URL_OF_APPLY_SERVICE=0.0.0.0:5002
      - URL_OF_UNIVERSER_SERVICE=universer:8000
      - URL_OF_SNAPSHOT_SERVICE=universer:9000
      - SAVE_SHEET_SNAPSHOT_INTERVAL=50
      - SAVE_DOC_SNAPSHOT_INTERVAL=50
      - no_proxy=127.0.0.1,localhost,172.30.0.0/16,universer
    expose:
      - 5001
      - 5002
    networks:
      - univer
    labels:
      - com.univer.app=collaboration-server

  univer-postgres:
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/postgres:${POSTGRES_VERSION}
    restart: always
    container_name: univer-postgres
    environment:
      # - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - univer
    labels:
      - com.univer.app=postgres

  univer-rabbitmq:
    restart: always
    container_name: univer-rabbitmq
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/rabbitmq:${RABBITMQ_VERSION}
    expose:
      - 5672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - univer
    labels:
      - com.univer.app=rabbitmq

  univer-redis:
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/redis:${REDIS_VERSION}
    container_name: univer-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - 6379
    networks:
      - univer
    labels:
      - com.univer.app=redis
    volumes:
      - redis-data:/bitnami/redis/data

  univer-temporal:
    container_name: univer-temporal
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/temporal:${TEMPORAL_VERSION}
    environment:
      - DB=postgresql
      - POSTGRES_SEEDS=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - TEMPORAL_CLI_SHOW_STACKS=1
      - NO_PROXY=127.0.0.1,localhost,172.30.0.0/16
    volumes:
      - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
    expose:
      - 7233
    depends_on:
      - univer-postgres
    networks:
      - univer
    labels:
      - com.univer.app=temporal
  
  univer-minio:
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/minio:${MINIO_VERSION}
    container_name: univer-minio
    environment:
      - MINIO_ROOT_USER=${S3_USER}
      - MINIO_ROOT_PASSWORD=${S3_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=univer-staging
    expose:
      - 9000
      - 9001
    networks:
      - univer
    labels:
      - com.univer.app=minio
    volumes:
      - minio-data:/bitnami/minio/data

  univer-worker-exchange:
    restart: always
    container_name: univer-worker-exchange
    image: univer-acr-registry.cn-shenzhen.cr.aliyuncs.com/release/worker-exchange:${UNIVER_WORKER_EXCHANGE_VERSION}
    environment:
      - NO_PROXY=127.0.0.1,localhost,172.30.0.0/16,univer-temporal,univer-minio,universer
      - TEMPORAL_SERVER=${TEMPORAL_HOST}:${TEMPORAL_PORT}
      - TEMPORAL_NAMESPACE=${TEMPORAL_NAMESPACE}
    depends_on:
      - univer-temporal
    networks:
      - univer
    labels:
      - com.univer.app=worker-exchange

networks:
  univer:
    name: unvier-prod
    driver: bridge
    ipam:
     config:
       - subnet: 172.30.0.0/16

volumes:
  postgres-data:
    name: univer-prod-postgres-data
  redis-data:
    name: univer-prod-redis-data
  minio-data:
    name: univer-prod-minio-data

